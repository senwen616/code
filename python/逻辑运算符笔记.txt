& 逻辑与 两个必须都为1才为1
| 逻辑或 有一个为1即为1
^ 逻辑异或  相同为0 不同为1
在应用到集合中 a = {1,2,4} b = {1,3,4}
a | b 即为两个集合求并集，结果为{1,2,3,4}
a & b 即为两个集合求交集，结果为{1,4}
a ^ b 即为两个集合求并集-交集，结果为{2,3}

编程应用：
在第一行我们写上一个 0。接下来的每一行，将前一行中的0替换为01，1替换为10。
解释:
第一行: 0
第二行: 01
第三行: 0110
第四行: 01101001

给定行数 N 和序数 K，返回第 N 行中第 K个字符。（K从1开始）
一般而言，第 K 位的父位应该是第 (K+1) / 2 位。如果父位是 0，那么这一位就是 1 - (K%2)。如果父位是 1，那么这一位就是 K%2。
class Solution(object):
    def kthGrammar(self, N, K):
        if N == 1: return 0
        return (1 - K%2) ^ self.kthGrammar(N-1, (K+1)/2)
#解释 这里结果只有0,和1两种情况， 若与0异或，结果不变，即父位是0，则为1-k%2; 由于k%2只有0,1两种情况，而与1异或相当于取反，所以1-k%2与1异或即为k%2